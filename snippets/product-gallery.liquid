{% comment %}
  Product Gallery Component
  
  Usage: {% render 'product-gallery', product: product, current_variant: variant %}
  
  Parameters:
  - product: Shopify product object
  - current_variant: Current selected variant (optional)
{% endcomment %}

{% assign current_variant = current_variant | default: product.selected_or_first_available_variant %}
{% assign gallery_images = product.images %}

<div class="product-gallery-container" data-product-gallery>
  
  {% if gallery_images.size > 0 %}
    
    <!-- Main Gallery -->
    <div class="gallery-main">
      
      {% for image in gallery_images %}
        <div class="gallery-slide" data-slide-index="{{ forloop.index }}">
          <div class="numbertext">{{ forloop.index }} / {{ gallery_images.size }}</div>
          <img 
            src="{{ image | img_url: '800x800' }}" 
            srcset="{{ image | img_url: '400x400' }} 400w,
                    {{ image | img_url: '600x600' }} 600w,
                    {{ image | img_url: '800x800' }} 800w,
                    {{ image | img_url: '1200x1200' }} 1200w"
            sizes="(max-width: 768px) 100vw, 50vw"
            alt="{% if image.alt != blank %}{{ image.alt }}{% else %}{{ product.title }} - Imagen {{ forloop.index }}{% endif %}"
            class="gallery-main-image"
            loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
          >
          
          <!-- Fullscreen Button -->
          <button 
            class="gallery-fullscreen-btn" 
            data-lightbox-trigger="{{ forloop.index0 }}"
            aria-label="Ver imagen en pantalla completa"
            type="button"
          >
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
            </svg>
          </button>
        </div>
      {% endfor %}
      
      <!-- Navigation Arrows -->
      {% if gallery_images.size > 1 %}
        <a class="gallery-prev" data-nav="prev" aria-label="Imagen anterior">❮</a>
        <a class="gallery-next" data-nav="next" aria-label="Siguiente imagen">❯</a>
      {% endif %}
    </div>
    
    <!-- Thumbnail Gallery -->
    {% if gallery_images.size > 1 %}
      <div class="gallery-thumbs">
        {% for image in gallery_images %}
          <div class="gallery-thumb" data-thumb-index="{{ forloop.index }}">
            <img 
              src="{{ image | img_url: '150x150' }}" 
              alt="{% if image.alt != blank %}{{ image.alt }}{% else %}{{ product.title }} - Miniatura {{ forloop.index }}{% endif %}"
              class="gallery-thumb-image"
              loading="lazy"
            >
          </div>
        {% endfor %}
      </div>
    {% endif %}
    
  {% else %}
    
    <!-- No Images Placeholder -->
    <div class="no-image">
      <div class="no-image-content">
        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
          <circle cx="8.5" cy="8.5" r="1.5"/>
          <polyline points="21,15 16,10 5,21"/>
        </svg>
        <p>Sin imágenes disponibles</p>
      </div>
    </div>
    
  {% endif %}
  
</div>

<!-- Lightbox Modal -->
{% if gallery_images.size > 0 %}
  {% render 'product-lightbox', images: gallery_images, product: product %}
{% endif %}

<script>
document.addEventListener('DOMContentLoaded', function() {
  const gallery = document.querySelector('[data-product-gallery]');
  
  if (!gallery) return;
  
  let slideIndex = 1;
  const slides = gallery.querySelectorAll('.gallery-slide');
  const thumbs = gallery.querySelectorAll('.gallery-thumb');
  const prevBtn = gallery.querySelector('[data-nav="prev"]');
  const nextBtn = gallery.querySelector('[data-nav="next"]');
  
  // Función para mostrar slides
  function showSlide(n) {
    if (slides.length === 0) return;
    
    if (n > slides.length) { slideIndex = 1; }
    if (n < 1) { slideIndex = slides.length; }
    
    // Ocultar todos los slides
    slides.forEach(slide => {
      slide.style.display = 'none';
    });
    
    // Remover clase active de todos los thumbs
    thumbs.forEach(thumb => {
      thumb.classList.remove('active');
    });
    
    // Mostrar slide actual
    slides[slideIndex - 1].style.display = 'block';
    
    // Activar thumb actual
    if (thumbs.length > 0) {
      thumbs[slideIndex - 1].classList.add('active');
    }
  }
  
  // Función para cambiar slides
  function plusSlides(n) {
    showSlide(slideIndex += n);
  }
  
  // Función para ir a un slide específico
  function currentSlide(n) {
    showSlide(slideIndex = n);
  }
  
  // Event listeners para navegación
  if (prevBtn) {
    prevBtn.addEventListener('click', function(e) {
      e.preventDefault();
      plusSlides(-1);
    });
  }
  
  if (nextBtn) {
    nextBtn.addEventListener('click', function(e) {
      e.preventDefault();
      plusSlides(1);
    });
  }
  
  // Event listeners para thumbnails
  thumbs.forEach((thumb, index) => {
    thumb.addEventListener('click', function() {
      currentSlide(index + 1);
    });
  });
  
  // Event listeners para lightbox
  const lightboxTriggers = gallery.querySelectorAll('[data-lightbox-trigger]');
  lightboxTriggers.forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      const index = parseInt(this.getAttribute('data-lightbox-trigger'));
      
      window.dispatchEvent(new CustomEvent('openLightbox', {
        detail: { index: index }
      }));
    });
  });
  
  // Función global para compatibilidad
  window.openLightbox = function(index) {
    window.dispatchEvent(new CustomEvent('openLightbox', {
      detail: { index: index }
    }));
  };
  
  // Soporte para teclado
  document.addEventListener('keydown', function(e) {
    const lightboxOpen = document.querySelector('.product-lightbox.active');
    if (lightboxOpen) return;
    
    if (e.key === 'ArrowLeft') {
      plusSlides(-1);
    } else if (e.key === 'ArrowRight') {
      plusSlides(1);
    }
  });
  
  // Soporte para cambio de variantes
  if (typeof Shopify !== 'undefined') {
    document.addEventListener('variant:changed', function(e) {
      if (e.detail && e.detail.variant) {
        const variantImageId = e.detail.variant.featured_image?.id;
        
        if (variantImageId) {
          slides.forEach((slide, index) => {
            const img = slide.querySelector('img');
            if (img && img.src.includes(variantImageId)) {
              currentSlide(index + 1);
            }
          });
        }
      }
    });
  }
  
  // Soporte táctil para móviles
  let touchStartX = 0;
  let touchEndX = 0;
  
  gallery.addEventListener('touchstart', function(e) {
    touchStartX = e.changedTouches[0].screenX;
  }, { passive: true });
  
  gallery.addEventListener('touchend', function(e) {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  }, { passive: true });
  
  function handleSwipe() {
    const swipeThreshold = 50;
    const diff = touchStartX - touchEndX;
    
    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0) {
        plusSlides(1);
      } else {
        plusSlides(-1);
      }
    }
  }
  
  // Inicializar mostrando el primer slide
  showSlide(slideIndex);
});
</script>

<style>
* {
  box-sizing: border-box;
}

.product-gallery-container {
  width: 100%;
  max-width: 100%;
  position: relative;
}

.gallery-main {
  position: relative;
  margin-bottom: 1rem;
  width: 100%;
  background: #f5f5f5;
  border-radius: 8px;
  overflow: hidden;
}

.gallery-slide {
  display: none;
  position: relative;
  width: 100%;
  padding-bottom: 100%;
}

.gallery-slide:first-child {
  display: block;
}

.gallery-main-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 0 0 8px 0;
  z-index: 10;
}

.gallery-fullscreen-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: 6px;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 20;
  transition: all 0.2s;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.gallery-fullscreen-btn:hover {
  background: #fff;
  transform: scale(1.05);
}

.gallery-prev,
.gallery-next {
  cursor: pointer;
  position: absolute;
  top: 50%;
  width: auto;
  padding: 16px;
  margin-top: -22px;
  color: white;
  font-weight: bold;
  font-size: 24px;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 4px;
  user-select: none;
  transition: background-color 0.3s;
  z-index: 15;
  text-decoration: none;
}

.gallery-next {
  right: 1rem;
}

.gallery-prev {
  left: 1rem;
}

.gallery-prev:hover,
.gallery-next:hover {
  background-color: rgba(0, 0, 0, 0.8);
}

.gallery-thumbs {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  margin-top: 1rem;
}

.gallery-thumb {
  flex: 0 0 calc(16.666% - 10px);
  cursor: pointer;
  opacity: 0.6;
  transition: opacity 0.3s;
  border-radius: 6px;
  overflow: hidden;
  position: relative;
  padding-bottom: calc(16.666% - 10px);
  background: #f5f5f5;
}

.gallery-thumb.active {
  opacity: 1;
  outline: 2px solid #000;
  outline-offset: -2px;
}

.gallery-thumb:hover {
  opacity: 1;
}

.gallery-thumb-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.no-image {
  aspect-ratio: 1/1;
  background: #f5f5f5;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.no-image-content {
  text-align: center;
  color: #999;
}

.no-image-content svg {
  margin: 0 auto 1rem;
}

/* Responsive */
@media (max-width: 768px) {
  .gallery-slide {
    padding-bottom: 100%;
  }
  
  .gallery-thumb {
    flex: 0 0 calc(25% - 10px);
    padding-bottom: calc(25% - 10px);
  }
  
  .gallery-fullscreen-btn {
    width: 36px;
    height: 36px;
  }
  
  .gallery-prev,
  .gallery-next {
    padding: 12px;
    font-size: 20px;
  }
  
  .numbertext {
    font-size: 10px;
    padding: 6px 10px;
  }
}

@media (min-width: 769px) {
  .gallery-slide {
    padding-bottom: 75%;
  }
  
  .gallery-thumb {
    flex: 0 0 calc(16.666% - 10px);
    padding-bottom: calc(16.666% - 10px);
  }
}

@media (min-width: 640px) and (max-width: 768px) {
  .gallery-thumb {
    flex: 0 0 calc(20% - 10px);
    padding-bottom: calc(20% - 10px);
  }
}
</style>