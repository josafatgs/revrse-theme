{% comment %}
  Product Gallery Component
  
  Usage: {% render 'product-gallery', product: product, current_variant: variant %}
  
  Parameters:
  - product: Shopify product object
  - current_variant: Current selected variant (optional)
{% endcomment %}

{% assign current_variant = current_variant | default: product.selected_or_first_available_variant %}
{% assign gallery_images = product.images %}

<!-- If variant has specific images, use those instead -->
{% if current_variant.featured_image %}
  {% assign variant_images = product.images | where: 'id', current_variant.featured_image.id %}
  {% if variant_images.size > 0 %}
    {% comment %} You can customize this logic to show variant-specific images {% endcomment %}
    {% assign gallery_images = product.images %}
  {% endif %}
{% endif %}

<div class="product-gallery-container" data-product-gallery>
  
  {% if gallery_images.size > 0 %}
    
    <!-- Main Gallery -->
    <div class="gallery-main">
      <div class="swiper gallery-main-swiper" data-main-swiper>
        <div class="swiper-wrapper">
          {% for image in gallery_images %}
            <div class="swiper-slide">
              <img 
                src="{{ image | img_url: '800x600' }}" 
                srcset="{{ image | img_url: '400x300' }} 400w,
                        {{ image | img_url: '600x450' }} 600w,
                        {{ image | img_url: '800x600' }} 800w,
                        {{ image | img_url: '1200x900' }} 1200w"
                sizes="(max-width: 768px) 100vw, 50vw"
                alt="{% if image.alt != blank %}{{ image.alt }}{% else %}{{ product.title }} - Imagen {{ forloop.index }}{% endif %}"
                class="gallery-main-image"
                loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
                width="800"
                height="600"
              >
              
              <!-- Fullscreen Button -->
              <button 
                class="gallery-fullscreen-btn" 
                data-lightbox-trigger="{{ forloop.index0 }}"
                aria-label="Ver imagen en pantalla completa"
                type="button"
              >
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
                </svg>
              </button>
            </div>
          {% endfor %}
        </div>
        
        <!-- Navigation -->
        {% if gallery_images.size > 1 %}
          <div class="swiper-button-next" aria-label="Siguiente imagen"></div>
          <div class="swiper-button-prev" aria-label="Imagen anterior"></div>
          <div class="swiper-pagination"></div>
        {% endif %}
      </div>
      
      <!-- Image Counter -->
      <div class="gallery-counter">
        <span class="counter-current">1</span>
        <span class="counter-separator">/</span>
        <span class="counter-total">{{ gallery_images.size }}</span>
      </div>
    </div>
    
    <!-- Thumbnail Gallery -->
    {% if gallery_images.size > 1 %}
      <div class="gallery-thumbs">
        <div class="swiper gallery-thumbs-swiper" data-thumbs-swiper>
          <div class="swiper-wrapper">
            {% for image in gallery_images %}
              <div class="swiper-slide">
                <img 
                  src="{{ image | img_url: '150x100' }}" 
                  alt="{% if image.alt != blank %}{{ image.alt }}{% else %}{{ product.title }} - Miniatura {{ forloop.index }}{% endif %}"
                  class="gallery-thumb-image"
                  loading="lazy"
                  width="150"
                  height="100"
                >
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    {% endif %}
    
  {% else %}
    
    <!-- No Images Placeholder -->
    <div class="no-image">
      <div class="no-image-content">
        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
          <circle cx="8.5" cy="8.5" r="1.5"/>
          <polyline points="21,15 16,10 5,21"/>
        </svg>
        <p>Sin imágenes disponibles</p>
      </div>
    </div>
    
  {% endif %}
  
</div>

<!-- Lightbox Modal -->
{% if gallery_images.size > 0 %}
  {% render 'product-lightbox', images: gallery_images, product: product %}
{% endif %}

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Inicializar Product Gallery
  const productGallery = document.querySelector('[data-product-gallery]');
  
  if (!productGallery) return;
  
  const mainSwiperEl = productGallery.querySelector('[data-main-swiper]');
  const thumbsSwiperEl = productGallery.querySelector('[data-thumbs-swiper]');
  const counterCurrent = productGallery.querySelector('.counter-current');
  
  let thumbsSwiper = null;
  let mainSwiper = null;
  
  // Inicializar Swiper de miniaturas primero
  if (thumbsSwiperEl) {
    thumbsSwiper = new Swiper(thumbsSwiperEl, {
      spaceBetween: 10,
      slidesPerView: 4,
      freeMode: true,
      watchSlidesProgress: true,
      breakpoints: {
        640: {
          slidesPerView: 5,
        },
        768: {
          slidesPerView: 6,
        },
        1024: {
          slidesPerView: 4,
        }
      }
    });
  }
  
  // Inicializar Swiper principal
  if (mainSwiperEl) {
    mainSwiper = new Swiper(mainSwiperEl, {
      spaceBetween: 10,
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      pagination: {
        el: '.swiper-pagination',
        type: 'bullets',
        clickable: true,
      },
      thumbs: thumbsSwiper ? {
        swiper: thumbsSwiper
      } : undefined,
      on: {
        slideChange: function() {
          // Actualizar contador
          if (counterCurrent) {
            counterCurrent.textContent = this.activeIndex + 1;
          }
        }
      }
    });
  }
  
  // Manejar botones de lightbox
  const lightboxTriggers = productGallery.querySelectorAll('[data-lightbox-trigger]');
  
  lightboxTriggers.forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      const index = parseInt(this.getAttribute('data-lightbox-trigger'));
      
      // Disparar evento personalizado para abrir lightbox
      window.dispatchEvent(new CustomEvent('openLightbox', {
        detail: { index: index }
      }));
    });
  });
  
  // Función global para compatibilidad con código antiguo
  window.openLightbox = function(index) {
    window.dispatchEvent(new CustomEvent('openLightbox', {
      detail: { index: index }
    }));
  };
  
  // Soporte para cambio de variantes
  if (mainSwiper && typeof Shopify !== 'undefined') {
    document.addEventListener('variant:changed', function(e) {
      if (e.detail && e.detail.variant) {
        // Aquí puedes agregar lógica para filtrar imágenes por variante
        // Por ejemplo, ir a la imagen destacada de la variante
        const variantImageId = e.detail.variant.featured_image?.id;
        
        if (variantImageId && mainSwiper) {
          // Encontrar el índice de la imagen de la variante
          const slides = mainSwiper.slides;
          for (let i = 0; i < slides.length; i++) {
            const img = slides[i].querySelector('img');
            if (img && img.src.includes(variantImageId)) {
              mainSwiper.slideTo(i);
              break;
            }
          }
        }
      }
    });
  }
  
  // Soporte para gestos táctiles en lightbox
  let touchStartX = 0;
  let touchEndX = 0;
  
  mainSwiperEl.addEventListener('touchstart', function(e) {
    touchStartX = e.changedTouches[0].screenX;
  }, { passive: true });
  
  mainSwiperEl.addEventListener('touchend', function(e) {
    touchEndX = e.changedTouches[0].screenX;
    handleGesture();
  }, { passive: true });
  
  function handleGesture() {
    const swipeThreshold = 50;
    const diff = touchStartX - touchEndX;
    
    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0 && mainSwiper) {
        mainSwiper.slideNext();
      } else if (mainSwiper) {
        mainSwiper.slidePrev();
      }
    }
  }
  
  // Precarga de imágenes adyacentes
  if (mainSwiper) {
    mainSwiper.on('slideChange', function() {
      const current = this.activeIndex;
      const slides = this.slides;
      
      // Precargar siguiente y anterior
      [current - 1, current + 1].forEach(idx => {
        if (idx >= 0 && idx < slides.length) {
          const img = slides[idx].querySelector('img[loading="lazy"]');
          if (img) {
            img.loading = 'eager';
          }
        }
      });
    });
  }
  
  // Soporte para teclado
  document.addEventListener('keydown', function(e) {
    if (!mainSwiper) return;
    
    const lightboxOpen = document.querySelector('.product-lightbox.active');
    if (lightboxOpen) return; // No interferir con el lightbox
    
    if (e.key === 'ArrowLeft') {
      mainSwiper.slidePrev();
    } else if (e.key === 'ArrowRight') {
      mainSwiper.slideNext();
    }
  });
});
</script>

<style>
.product-gallery-container {
  width: 100%;
  max-width: 100%;
}

.gallery-main {
  position: relative;
  margin-bottom: 1rem;
}

.gallery-main-swiper {
  border-radius: 8px;
  overflow: hidden;
}

.swiper-slide {
  position: relative;
  background: #f5f5f5;
  max-height: 600px;
}

.gallery-main-image {
  width: 100%;
  height: auto;
  max-height: 600px;
  object-fit: contain;
  display: block;
}

.gallery-fullscreen-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: 6px;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  transition: all 0.2s;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.gallery-fullscreen-btn:hover {
  background: #fff;
  transform: scale(1.05);
}

.gallery-counter {
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 0.5rem 0.75rem;
  border-radius: 20px;
  font-size: 0.875rem;
  z-index: 10;
}

.gallery-thumbs {
  margin-top: 1rem;
}

.gallery-thumbs-swiper .swiper-slide {
  cursor: pointer;
  opacity: 0.6;
  transition: opacity 0.3s;
  border-radius: 6px;
  overflow: hidden;
  height: 80px;
}

.gallery-thumbs-swiper .swiper-slide-thumb-active {
  opacity: 1;
  outline: 2px solid #000;
}

.gallery-thumb-image {
  width: 100%;
  height: 80px;
  object-fit: cover;
}

.swiper-button-next,
.swiper-button-prev {
  color: #000;
  background: rgba(255, 255, 255, 0.9);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  transition: all 0.2s;
}

.swiper-button-next:after,
.swiper-button-prev:after {
  font-size: 1.25rem;
}

.swiper-button-next:hover,
.swiper-button-prev:hover {
  background: #fff;
  transform: scale(1.05);
}

.swiper-pagination-bullet {
  background: #fff;
  opacity: 0.7;
}

.swiper-pagination-bullet-active {
  opacity: 1;
  background: #000;
}

.no-image {
  aspect-ratio: 4/3;
  background: #f5f5f5;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.no-image-content {
  text-align: center;
  color: #999;
}

.no-image-content svg {
  margin: 0 auto 1rem;
}

/* Responsive */
@media (max-width: 768px) {
  .swiper-slide {
    max-height: 400px;
  }
  
  .gallery-main-image {
    max-height: 400px;
  }
  
  .gallery-thumbs-swiper .swiper-slide {
    height: 60px;
  }
  
  .gallery-thumb-image {
    height: 60px;
  }
  
  .gallery-fullscreen-btn {
    width: 36px;
    height: 36px;
  }
  
  .swiper-button-next,
  .swiper-button-prev {
    width: 36px;
    height: 36px;
  }
  
  .gallery-counter {
    font-size: 0.75rem;
    padding: 0.375rem 0.625rem;
  }
}
</style>